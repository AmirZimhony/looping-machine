{"version":3,"sources":["components/Header.js","components/MusicBox.js","components/Spinner.js","components/Play.js","music_files/Bass Warwick heavy funk groove on E 120 BPM.mp3","music_files/120_future_funk_beats_25.mp3","music_files/120_stutter_breakbeats_16.mp3","music_files/electric guitar coutry slide 120bpm - B.mp3","music_files/FUD_120_StompySlosh.mp3","music_files/GrooveB_120bpm_Tanggu.mp3","music_files/MazePolitics_120_Perc.mp3","music_files/PAS3GROOVE1.03B.mp3","music_files/SilentStar_120_Em_OrganSynth.mp3","App.js","reportWebVitals.js","index.js"],"names":["Header","title","defaultProps","MusicBox","class","className","Spinnie","props","this","on","Spinner","animation","role","variant","xmlns","width","height","fill","viewBox","d","React","Component","Play","useState","currentlyPlaying","setCurrentlyPlaying","Audio","audioClip","sound","audio","shouldBePlaying","useEffect","j","console","log","onStart","onStop","canJoin","joinPlay","anyPlaying","play","onended","loopEnd","Container","Card","border","Body","Title","label","Button","id","onClick","start","count","changeShouldPlay","index","pause","currentTime","App","counter","setCounter","loopHasEnded","setLoopHasEnded","Bass","stutterBeats","futureFunk","StompySlosh","electricGuitar","groove","MazePolitics","pas3","organSynth","audioClips","setAudioClips","handleStart","value","handleStop","startPlay","endLoop","updateArray","i","needToPlay","newArr","clip","Row","Col","sm","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62d2ba47.chunk.js","sourcesContent":["//completely redundant currently\r\n\r\nconst Header = ({ title }) => {\r\n    return (\r\n        <header>\r\n            <h1>{title}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Loop machinery',\r\n}\r\n\r\nexport default Header\r\n","//completely redundant currently, maybe take syling from here\r\n\r\n// cosnt songName = require('../music_files/')\r\n\r\nconst MusicBox = ({ title }) => {\r\n    return (\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title\"> {title}</h4>\r\n                <p class=\"card-text\">A beautiful electric guitar </p>\r\n                <button className='btn-play'>Play</button>\r\n                <button className='btn-stop'>Stop</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMusicBox.defaultProps = {\r\n    title: 'songName',\r\n}\r\n\r\nexport default MusicBox\r\n","import { Spinner } from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nexport class Spinnie extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.on === true) {\r\n            return (\r\n                <div>\r\n                    <Spinner animation=\"border\" role=\"status\" variant=\"success\">\r\n                        <span className=\"sr-only m-3\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return <div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" class=\"bi bi-caret-right-square-fill\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.5 10a.5.5 0 0 0 .832.374l4.5-4a.5.5 0 0 0 0-.748l-4.5-4A.5.5 0 0 0 5.5 4v8z\" />\r\n            </svg></div>\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport default Spinnie","import React, { useState, useEffect } from 'react';\r\n// import style from \"src\\style.js\"\r\nimport { Spinnie } from './Spinner'\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Container } from 'react-bootstrap';\r\nimport { render } from '@testing-library/react';\r\n\r\nexport function Play(props) {\r\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(false);\r\n  const [audio] = useState(new Audio(props.audioClip.sound))\r\n  const [shouldPlay, setShouldPlay] = useState(props.audioClip.shouldBePlaying)\r\n\r\n\r\n  const start = () => {\r\n    if (props.count === 0) {\r\n      props.anyPlaying();//change 'loopHasEnded' value to false\r\n      console.log(`has the loop ended? the answer:`, props.canJoin);\r\n      setCurrentlyPlaying((currentlyPlaying) => (currentlyPlaying = true));\r\n      audio.play();\r\n      audio.onended = function () {\r\n        props.loopEnd();//change 'loopHasEnded' value to true\r\n        console.log(`has the loop ended? the answer:`, props.canJoin);\r\n        console.log('song ended');\r\n        start();\r\n      }\r\n    }\r\n    else {\r\n      props.changeShouldPlay(props.index, true);//WORKS. if someone else is playing then add this one to waiting list i.e. shouldBePlaying = true\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currentlyPlaying) {\r\n      for (let j = 0; j < 20; j++){\r\n      console.log(`${j}`)\r\n      }\r\n      props.onStart();///WORKS necessary, adds +1 to counter of active songs \r\n    }\r\n    if (!currentlyPlaying){\r\n      console.log('update counter - 1')\r\n      props.onStop();//necessary, subtracts -1 from counter of active songs\r\n    }\r\n  }, [currentlyPlaying])//previously props.canJoin\r\n\r\n  useEffect(() => {\r\n    if (props.canJoin && props.audioClip.shouldBePlaying) {\r\n      joinPlay();\r\n    }\r\n  }, [props.canJoin])//previously props.canJoin\r\n\r\n  const joinPlay = () => {\r\n    props.anyPlaying();//change 'loopHasEnded' value to false\r\n    setCurrentlyPlaying((currentlyPlaying) => (currentlyPlaying = true));\r\n    audio.play();\r\n    audio.onended = function () {\r\n      props.loopEnd();//change 'loopHasEnded' value to true\r\n      console.log('loop has ended');\r\n      joinPlay();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // if (props.join(props.index)){\r\n  //   console.log('in the join in play')\r\n  //   joinPlay();\r\n  // }\r\n\r\n  const stop = () => {\r\n    if (currentlyPlaying) {\r\n      setCurrentlyPlaying((currentlyPlaying) => (currentlyPlaying = false));\r\n      console.log('PRESSED STOP')\r\n      console.log(audio)\r\n      audio.pause()\r\n      audio.currentTime = 0;\r\n      props.changeShouldPlay(props.index, false);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Card border='info' className='m-3'>\r\n          <Card.Body>\r\n            <Card.Title>Hear the sound of {props.audioClip.label}!: </Card.Title>\r\n            <Button id=\"startMusic\" onClick={start}  >Playyyy day</Button>\r\n            <button id=\"stopMusic\" onClick={stop}>Stop me!</button>\r\n          </Card.Body>\r\n          <Spinnie on={currentlyPlaying} />\r\n        </Card>\r\n      </Container >\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Play","export default __webpack_public_path__ + \"static/media/Bass Warwick heavy funk groove on E 120 BPM.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/120_future_funk_beats_25.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/120_stutter_breakbeats_16.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/electric guitar coutry slide 120bpm - B.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/FUD_120_StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/GrooveB_120bpm_Tanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics_120_Perc.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.03B.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/SilentStar_120_Em_OrganSynth.f2d668af.mp3\";","import Header from './components/Header';\nimport React, { useState } from 'react';\nimport MusicBox from './components/MusicBox';\nimport { Play } from './components/Play';\nimport { Col, Row, Container, Card } from 'react-bootstrap';\nimport './index.css';\n\n\nimport Bass from './music_files/Bass Warwick heavy funk groove on E 120 BPM.mp3';\nimport futureFunk from './music_files/120_future_funk_beats_25.mp3';\nimport stutterBeats from './music_files/120_stutter_breakbeats_16.mp3';\nimport electricGuitar from './music_files/electric guitar coutry slide 120bpm - B.mp3';\nimport StompySlosh from './music_files/FUD_120_StompySlosh.mp3';\nimport groove from './music_files/GrooveB_120bpm_Tanggu.mp3';\nimport MazePolitics from './music_files/MazePolitics_120_Perc.mp3';\nimport pas3 from './music_files/PAS3GROOVE1.03B.mp3';\nimport organSynth from './music_files/SilentStar_120_Em_OrganSynth.mp3';\nimport reactDom from 'react-dom';\n\n\n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n  const [loopHasEnded, setLoopHasEnded] = useState(false);\n  const [audioClips, setAudioClips] = useState([\n    { sound: Bass, label: 'Funky Bass', shouldBePlaying: false },\n    { sound: stutterBeats, label: 'Stuttering Beats', shouldBePlaying: false },\n    { sound: futureFunk, label: 'Future Funk', shouldBePlaying: false },\n    { sound: StompySlosh, label: 'Stompin rythm', shouldBePlaying: false },\n    { sound: electricGuitar, label: 'Electric country guitar', shouldBePlaying: false },\n    { sound: groove, label: 'Groovyyy', shouldBePlaying: false },\n    { sound: MazePolitics, label: 'The Maze', shouldBePlaying: false },\n    { sound: pas3, label: 'Sachi drums', shouldBePlaying: false },\n    { sound: organSynth, label: 'Psychedelic Organ', shouldBePlaying: false },\n  ])\n\n  const handleStart = value => setCounter(counter + 1)\n  const handleStop = value => setCounter(counter > 0 ? counter - 1 : 0)\n  const startPlay = value => setLoopHasEnded(false)\n  const endLoop = value => setLoopHasEnded(true)\n  const updateArray = (i, needToPlay) => {\n    let newArr = [...audioClips];\n    console.log(`new array is`, { newArr })\n    let clip = { ...newArr[i] }\n    console.log(`chosen clip is`, { clip })\n    clip.shouldBePlaying = needToPlay;\n    newArr[i] = clip;\n    setAudioClips(newArr);\n  }\n  // const joinPlay = (i) => {\n  //   if ( {...audioClips[i].shouldBePlaying}) {\n  //     console.log('WE ARE IN joinPlay in app.js')\n  //     return true;\n  //   }\n  // }\n\n  // const setLoopHasEndedSong = (index, playingNow) => {\n  //   const audioClipsModified = [...audioClips];\n  //   const clip = { ...audioClips[index] };\n  //   clip.playing = playingNow;\n  //   audioClipsModified[index] = clip;\n  //   setAudioClips({ audioClipsModified });\n  // }\n\n  return (\n    <body>\n    <Container>\n      <Row>\n        <Col sm={4}>\n          <h1 className='mb-3 text-center'>Behold your tracks: </h1>\n          {audioClips.map((audio, i) => {\n            return <Card border='dark' className=\"text-center\">\n              <Card.Title> Track {i+1}: {audio.label} </Card.Title>\n            </Card>\n          })}\n        </Col>\n        <Col sm={4}>\n          <div className=\"container\">\n            <h2 className=' mt-4 text-center'>Play them now!</h2>\n            <div>\n              {audioClips.map((audio, i) => {\n                return <Play key={i} index={i} onStart={handleStart} onStop={handleStop} count={counter} changeShouldPlay={updateArray} anyPlaying={startPlay} loopEnd={endLoop} canJoin={loopHasEnded} audioClip={audio} />\n              })}\n            </div>\n          </div>\n        </Col>\n\n      </Row>\n    </Container>\n    </body>\n  );\n}\n\n\n\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}